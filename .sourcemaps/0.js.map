<<<<<<< HEAD
{"version":3,"sources":["../../src/pages/home/home.module.ts","../../node_modules/@ionic-native/geolocation/index.js","../../node_modules/@ionic-native/launch-navigator/index.js","../../src/pages/home/home.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAyC;AACR;AACe;AACiB;AACT;AAOxD,IAAa,cAAc;IAA3B;IAA8B,CAAC;IAAD,qBAAC;AAAD,CAAC;AAAlB,cAAc;IAN1B,uEAAQ,CAAC;QACR,YAAY,EAAE,CAAC,uDAAQ,CAAC;QACxB,OAAO,EAAE,CAAC,sEAAe,CAAC,QAAQ,CAAC,uDAAQ,CAAC,CAAC;QAC7C,SAAS,EAAC,CAAC,uFAAe,EAAC,8EAAW,CAAC;QACvC,eAAe,EAAE,CAAC,uDAAQ,CAAC;KAC5B,CAAC;GACW,cAAc,CAAI;AAAJ;;;;;;;;;ACX3B;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AAC2C;AAC6B;AAC3B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mBAAmB;AAClC,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA,iBAAiB,mBAAmB;AACpC,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA,iBAAiB,mBAAmB;AACpC,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,eAAe,mBAAmB;AAClC,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,iBAAiB,mBAAmB;AACpC,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,iBAAiB,mBAAmB;AACpC,mBAAmB,wBAAwB;AAC3C;AACA;AACA,mBAAmB,2DAAU;AAC7B;AACA,gCAAgC,kDAAkD;AAClF,SAAS;AACT;AACA;AACA,SAAS,OAAO,iEAAU,EAAE;AAC5B;AACA;AACA,QAAQ,2EAAO;AACf;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,0EAAM;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC,CAAC,6EAAiB;AACI;AACvB,iC;;;;;;;;ACjOA;AAAA;AAAA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AAC2C;AAC6B;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,0CAA0C;AACrD;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gBAAgB;AAC3C,uBAAuB;AACvB,iBAAiB;AACjB;AACA;AACA;AACA,6BAA6B,gBAAgB;AAC7C,yBAAyB;AACzB,mBAAmB;AACnB;AACA;AACA;AACA,6BAA6B,gBAAgB;AAC7C,yBAAyB;AACzB,mBAAmB;AACnB;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA,mBAAmB;AACnB,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB,mBAAmB;AACnB;AACA;AACA;AACA,qBAAqB;AACrB,mBAAmB;AACnB;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA,mBAAmB;AACnB,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB,mBAAmB;AACnB;AACA;AACA;AACA,qBAAqB;AACrB,mBAAmB;AACnB;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA,wBAAwB;AACxB,iBAAiB;AACjB;AACA;AACA;AACA,0BAA0B;AAC1B,mBAAmB;AACnB;AACA;AACA;AACA,0BAA0B;AAC1B,mBAAmB;AACnB;AACA,yBAAyB,QAAQ;AACjC;AACA;AACA,mBAAmB,OAAO;AAC1B,wBAAwB;AACxB,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B,0BAA0B;AAC1B,mBAAmB;AACnB;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B,0BAA0B;AAC1B,mBAAmB;AACnB;AACA,8BAA8B,QAAQ;AACtC;AACA;AACA,mBAAmB;AACnB,wBAAwB;AACxB,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB,0BAA0B;AAC1B,mBAAmB;AACnB;AACA;AACA;AACA,qBAAqB;AACrB,0BAA0B;AAC1B,mBAAmB;AACnB;AACA,8BAA8B,QAAQ;AACtC;AACA,mBAAmB;AACnB,wBAAwB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","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { HomePage} from './home';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { LaunchNavigator } from '@ionic-native/launch-navigator';\r\nimport { Geolocation } from '@ionic-native/geolocation';\r\n@NgModule({\r\n  declarations: [HomePage],\r\n  imports: [IonicPageModule.forChild(HomePage)],\r\n  providers:[LaunchNavigator,Geolocation],\r\n  entryComponents: [HomePage]\r\n})\r\nexport class HomePageModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.module.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\nimport { Observable } from 'rxjs/Observable';\n/**\n * @name Geolocation\n * @description\n * This plugin provides information about the device's location, such as latitude and longitude. Common sources of location information include Global Positioning System (GPS) and location inferred from network signals such as IP address, RFID, WiFi and Bluetooth MAC addresses, and GSM/CDMA cell IDs.\n *\n *  This API is based on the W3C Geolocation API Specification, and only executes on devices that don't already provide an implementation.\n *\n * For iOS you have to add this configuration to your configuration.xml file\n * ```xml\n * <edit-config file=\"*-Info.plist\" mode=\"merge\" target=\"NSLocationWhenInUseUsageDescription\">\n *    <string>We use your location for full functionality of certain app features.</string>\n * </edit-config>\n * ```\n *\n *\n * @usage\n *\n * ```typescript\n * import { Geolocation } from '@ionic-native/geolocation';\n *\n * ...\n *\n * constructor(private geolocation: Geolocation) {}\n *\n * ...\n *\n * this.geolocation.getCurrentPosition().then((resp) => {\n *  // resp.coords.latitude\n *  // resp.coords.longitude\n * }).catch((error) => {\n *   console.log('Error getting location', error);\n * });\n *\n * let watch = this.geolocation.watchPosition();\n * watch.subscribe((data) => {\n *  // data can be a set of coordinates, or an error (if an error occurred).\n *  // data.coords.latitude\n *  // data.coords.longitude\n * });\n * ```\n * @interfaces\n * Coordinates\n * Geoposition\n * PositionError\n * GeolocationOptions\n */\nvar Geolocation = (function (_super) {\n    __extends(Geolocation, _super);\n    function Geolocation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Get the device's current position.\n     *\n     * @param {GeolocationOptions} options  The [geolocation options](https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions).\n     * @returns {Promise<Geoposition>} Returns a Promise that resolves with the [position](https://developer.mozilla.org/en-US/docs/Web/API/Position) of the device, or rejects with an error.\n     */\n    /**\n       * Get the device's current position.\n       *\n       * @param {GeolocationOptions} options  The [geolocation options](https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions).\n       * @returns {Promise<Geoposition>} Returns a Promise that resolves with the [position](https://developer.mozilla.org/en-US/docs/Web/API/Position) of the device, or rejects with an error.\n       */\n    Geolocation.prototype.getCurrentPosition = /**\n       * Get the device's current position.\n       *\n       * @param {GeolocationOptions} options  The [geolocation options](https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions).\n       * @returns {Promise<Geoposition>} Returns a Promise that resolves with the [position](https://developer.mozilla.org/en-US/docs/Web/API/Position) of the device, or rejects with an error.\n       */\n    function (options) {\n        return;\n    };\n    /**\n     * Watch the current device's position.  Clear the watch by unsubscribing from\n     * Observable changes.\n     *\n     * ```typescript\n     * const subscription = this.geolocation.watchPosition()\n     *                               .filter((p) => p.coords !== undefined) //Filter Out Errors\n     *                               .subscribe(position => {\n     *   console.log(position.coords.longitude + ' ' + position.coords.latitude);\n     * });\n     *\n     * // To stop notifications\n     * subscription.unsubscribe();\n     * ```\n     *\n     * @param {GeolocationOptions} options  The [geolocation options](https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions).\n     * @returns {Observable<Geoposition>} Returns an Observable that notifies with the [position](https://developer.mozilla.org/en-US/docs/Web/API/Position) of the device, or errors.\n     */\n    /**\n       * Watch the current device's position.  Clear the watch by unsubscribing from\n       * Observable changes.\n       *\n       * ```typescript\n       * const subscription = this.geolocation.watchPosition()\n       *                               .filter((p) => p.coords !== undefined) //Filter Out Errors\n       *                               .subscribe(position => {\n       *   console.log(position.coords.longitude + ' ' + position.coords.latitude);\n       * });\n       *\n       * // To stop notifications\n       * subscription.unsubscribe();\n       * ```\n       *\n       * @param {GeolocationOptions} options  The [geolocation options](https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions).\n       * @returns {Observable<Geoposition>} Returns an Observable that notifies with the [position](https://developer.mozilla.org/en-US/docs/Web/API/Position) of the device, or errors.\n       */\n    Geolocation.prototype.watchPosition = /**\n       * Watch the current device's position.  Clear the watch by unsubscribing from\n       * Observable changes.\n       *\n       * ```typescript\n       * const subscription = this.geolocation.watchPosition()\n       *                               .filter((p) => p.coords !== undefined) //Filter Out Errors\n       *                               .subscribe(position => {\n       *   console.log(position.coords.longitude + ' ' + position.coords.latitude);\n       * });\n       *\n       * // To stop notifications\n       * subscription.unsubscribe();\n       * ```\n       *\n       * @param {GeolocationOptions} options  The [geolocation options](https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions).\n       * @returns {Observable<Geoposition>} Returns an Observable that notifies with the [position](https://developer.mozilla.org/en-US/docs/Web/API/Position) of the device, or errors.\n       */\n    function (options) {\n        return new Observable(function (observer) {\n            var watchId = navigator.geolocation.watchPosition(observer.next.bind(observer), observer.next.bind(observer), options);\n            return function () { return navigator.geolocation.clearWatch(watchId); };\n        });\n    };\n    Geolocation.decorators = [\n        { type: Injectable },\n    ];\n    __decorate([\n        Cordova({\n            callbackOrder: 'reverse'\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], Geolocation.prototype, \"getCurrentPosition\", null);\n    /**\n     * @name Geolocation\n     * @description\n     * This plugin provides information about the device's location, such as latitude and longitude. Common sources of location information include Global Positioning System (GPS) and location inferred from network signals such as IP address, RFID, WiFi and Bluetooth MAC addresses, and GSM/CDMA cell IDs.\n     *\n     *  This API is based on the W3C Geolocation API Specification, and only executes on devices that don't already provide an implementation.\n     *\n     * For iOS you have to add this configuration to your configuration.xml file\n     * ```xml\n     * <edit-config file=\"*-Info.plist\" mode=\"merge\" target=\"NSLocationWhenInUseUsageDescription\">\n     *    <string>We use your location for full functionality of certain app features.</string>\n     * </edit-config>\n     * ```\n     *\n     *\n     * @usage\n     *\n     * ```typescript\n     * import { Geolocation } from '@ionic-native/geolocation';\n     *\n     * ...\n     *\n     * constructor(private geolocation: Geolocation) {}\n     *\n     * ...\n     *\n     * this.geolocation.getCurrentPosition().then((resp) => {\n     *  // resp.coords.latitude\n     *  // resp.coords.longitude\n     * }).catch((error) => {\n     *   console.log('Error getting location', error);\n     * });\n     *\n     * let watch = this.geolocation.watchPosition();\n     * watch.subscribe((data) => {\n     *  // data can be a set of coordinates, or an error (if an error occurred).\n     *  // data.coords.latitude\n     *  // data.coords.longitude\n     * });\n     * ```\n     * @interfaces\n     * Coordinates\n     * Geoposition\n     * PositionError\n     * GeolocationOptions\n     */\n    Geolocation = __decorate([\n        Plugin({\n            pluginName: 'Geolocation',\n            plugin: 'cordova-plugin-geolocation',\n            pluginRef: 'navigator.geolocation',\n            repo: 'https://github.com/apache/cordova-plugin-geolocation',\n            install: 'ionic cordova plugin add cordova-plugin-geolocation --variable GEOLOCATION_USAGE_DESCRIPTION=\"To locate you\"',\n            installVariables: ['GEOLOCATION_USAGE_DESCRIPTION'],\n            platforms: ['Amazon Fire OS', 'Android', 'Browser', 'iOS', 'Windows']\n        })\n    ], Geolocation);\n    return Geolocation;\n}(IonicNativePlugin));\nexport { Geolocation };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/geolocation/index.js\n// module id = 306\n// module chunks = 0","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\n/**\n * @name Launch Navigator\n * @description\n * Requires Cordova plugin: uk.co.workingedge.phonegap.plugin.launchnavigator. For more info, please see the [LaunchNavigator plugin docs](https://github.com/dpa99c/phonegap-launch-navigator).\n *\n * @usage\n * Please refer to the plugin's repo for detailed usage. This docs page only explains the Native wrapper.\n *\n * ```typescript\n * import { LaunchNavigator, LaunchNavigatorOptions } from '@ionic-native/launch-navigator';\n *\n * constructor(private launchNavigator: LaunchNavigator) { }\n *\n * ...\n *\n * let options: LaunchNavigatorOptions = {\n *   start: 'London, ON',\n *   app: LaunchNavigator.APPS.UBER\n * };\n *\n * this.launchNavigator.navigate('Toronto, ON', options)\n *   .then(\n *     success => console.log('Launched navigator'),\n *     error => console.log('Error launching navigator', error)\n *   );\n * ```\n * @interfaces\n * LaunchNavigatorOptions\n * PromptsOptions\n * RememberChoiceOptions\n * AppSelectionOptions\n * UserChoice\n * UserPrompted\n * AppSelection\n */\nvar LaunchNavigator = (function (_super) {\n    __extends(LaunchNavigator, _super);\n    function LaunchNavigator() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.APP = {\n            USER_SELECT: 'user_select',\n            APPLE_MAPS: 'apple_maps',\n            GOOGLE_MAPS: 'google_maps',\n            WAZE: 'waze',\n            CITYMAPPER: 'citymapper',\n            NAVIGON: 'navigon',\n            TRANSIT_APP: 'transit_app',\n            YANDEX: 'yandex',\n            UBER: 'uber',\n            TOMTOM: 'tomtom',\n            BING_MAPS: 'bing_maps',\n            SYGIC: 'sygic',\n            HERE_MAPS: 'here_maps',\n            MOOVIT: 'moovit'\n        };\n        _this.TRANSPORT_MODE = {\n            DRIVING: 'driving',\n            WALKING: 'walking',\n            BICYCLING: 'bicycling',\n            TRANSIT: 'transit'\n        };\n        return _this;\n    }\n    /**\n     * Launches navigator app\n     * @param destination {string|number[]} Location name or coordinates (as string or array)\n     * @param options {LaunchNavigatorOptions}\n     * @returns {Promise<any>}\n     */\n    /**\n       * Launches navigator app\n       * @param destination {string|number[]} Location name or coordinates (as string or array)\n       * @param options {LaunchNavigatorOptions}\n       * @returns {Promise<any>}\n       */\n    LaunchNavigator.prototype.navigate = /**\n       * Launches navigator app\n       * @param destination {string|number[]} Location name or coordinates (as string or array)\n       * @param options {LaunchNavigatorOptions}\n       * @returns {Promise<any>}\n       */\n    function (destination, options) { return; };\n    /**\n     * Determines if the given app is installed and available on the current device.\n     * @param app {string}\n     * @returns {Promise<any>}\n     */\n    /**\n       * Determines if the given app is installed and available on the current device.\n       * @param app {string}\n       * @returns {Promise<any>}\n       */\n    LaunchNavigator.prototype.isAppAvailable = /**\n       * Determines if the given app is installed and available on the current device.\n       * @param app {string}\n       * @returns {Promise<any>}\n       */\n    function (app) { return; };\n    /**\n     * Returns a list indicating which apps are installed and available on the current device.\n     * @returns {Promise<string[]>}\n     */\n    /**\n       * Returns a list indicating which apps are installed and available on the current device.\n       * @returns {Promise<string[]>}\n       */\n    LaunchNavigator.prototype.availableApps = /**\n       * Returns a list indicating which apps are installed and available on the current device.\n       * @returns {Promise<string[]>}\n       */\n    function () { return; };\n    /**\n     * Returns the display name of the specified app.\n     * @param app {string}\n     * @returns {string}\n     */\n    /**\n       * Returns the display name of the specified app.\n       * @param app {string}\n       * @returns {string}\n       */\n    LaunchNavigator.prototype.getAppDisplayName = /**\n       * Returns the display name of the specified app.\n       * @param app {string}\n       * @returns {string}\n       */\n    function (app) { return; };\n    /**\n     * Returns list of supported apps on a given platform.\n     * @param platform {string}\n     * @returns {string[]}\n     */\n    /**\n       * Returns list of supported apps on a given platform.\n       * @param platform {string}\n       * @returns {string[]}\n       */\n    LaunchNavigator.prototype.getAppsForPlatform = /**\n       * Returns list of supported apps on a given platform.\n       * @param platform {string}\n       * @returns {string[]}\n       */\n    function (platform) { return; };\n    /**\n     * Indicates if an app on a given platform supports specification of transport mode.\n     * @param app {string} specified as a string, you can use one of the constants, e.g `LaunchNavigator.APP.GOOGLE_MAPS`\n     * @param platform {string}\n     * @returns {boolean}\n     */\n    /**\n       * Indicates if an app on a given platform supports specification of transport mode.\n       * @param app {string} specified as a string, you can use one of the constants, e.g `LaunchNavigator.APP.GOOGLE_MAPS`\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    LaunchNavigator.prototype.supportsTransportMode = /**\n       * Indicates if an app on a given platform supports specification of transport mode.\n       * @param app {string} specified as a string, you can use one of the constants, e.g `LaunchNavigator.APP.GOOGLE_MAPS`\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    function (app, platform) { return; };\n    /**\n     * Returns the list of transport modes supported by an app on a given platform.\n     * @param app {string}\n     * @param platform {string}\n     * @returns {string[]}\n     */\n    /**\n       * Returns the list of transport modes supported by an app on a given platform.\n       * @param app {string}\n       * @param platform {string}\n       * @returns {string[]}\n       */\n    LaunchNavigator.prototype.getTransportModes = /**\n       * Returns the list of transport modes supported by an app on a given platform.\n       * @param app {string}\n       * @param platform {string}\n       * @returns {string[]}\n       */\n    function (app, platform) { return; };\n    /**\n     * @param app {string}\n     * @param platform {string}\n     * @returns {boolean}\n     */\n    /**\n       * @param app {string}\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    LaunchNavigator.prototype.supportsDestName = /**\n       * @param app {string}\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    function (app, platform) { return; };\n    /**\n     * Indicates if an app on a given platform supports specification of start location.\n     * @param app {string}\n     * @param platform {string}\n     * @returns {boolean}\n     */\n    /**\n       * Indicates if an app on a given platform supports specification of start location.\n       * @param app {string}\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    LaunchNavigator.prototype.supportsStart = /**\n       * Indicates if an app on a given platform supports specification of start location.\n       * @param app {string}\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    function (app, platform) { return; };\n    /**\n     * @param app {string}\n     * @param platform {string}\n     * @returns {boolean}\n     */\n    /**\n       * @param app {string}\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    LaunchNavigator.prototype.supportsStartName = /**\n       * @param app {string}\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    function (app, platform) { return; };\n    /**\n     * Indicates if an app on a given platform supports specification of launch mode.\n     * Note that currently only Google Maps on Android does.\n     * @param app {string}\n     * @param platform {string}\n     * @returns {boolean}\n     */\n    /**\n       * Indicates if an app on a given platform supports specification of launch mode.\n       * Note that currently only Google Maps on Android does.\n       * @param app {string}\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    LaunchNavigator.prototype.supportsLaunchMode = /**\n       * Indicates if an app on a given platform supports specification of launch mode.\n       * Note that currently only Google Maps on Android does.\n       * @param app {string}\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    function (app, platform) { return; };\n    /**\n     * @param destination {string | number[]}\n     * @param options {LaunchNavigatorOptions}\n     */\n    /**\n       * @param destination {string | number[]}\n       * @param options {LaunchNavigatorOptions}\n       */\n    LaunchNavigator.prototype.userSelect = /**\n       * @param destination {string | number[]}\n       * @param options {LaunchNavigatorOptions}\n       */\n    function (destination, options) { };\n    LaunchNavigator.decorators = [\n        { type: Injectable },\n    ];\n    __decorate([\n        Cordova({\n            successIndex: 2,\n            errorIndex: 3\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object, Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], LaunchNavigator.prototype, \"navigate\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Promise)\n    ], LaunchNavigator.prototype, \"isAppAvailable\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], LaunchNavigator.prototype, \"availableApps\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", String)\n    ], LaunchNavigator.prototype, \"getAppDisplayName\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Array)\n    ], LaunchNavigator.prototype, \"getAppsForPlatform\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Boolean)\n    ], LaunchNavigator.prototype, \"supportsTransportMode\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Array)\n    ], LaunchNavigator.prototype, \"getTransportModes\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Boolean)\n    ], LaunchNavigator.prototype, \"supportsDestName\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Boolean)\n    ], LaunchNavigator.prototype, \"supportsStart\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Boolean)\n    ], LaunchNavigator.prototype, \"supportsStartName\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Boolean)\n    ], LaunchNavigator.prototype, \"supportsLaunchMode\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object, Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], LaunchNavigator.prototype, \"userSelect\", null);\n    /**\n     * @name Launch Navigator\n     * @description\n     * Requires Cordova plugin: uk.co.workingedge.phonegap.plugin.launchnavigator. For more info, please see the [LaunchNavigator plugin docs](https://github.com/dpa99c/phonegap-launch-navigator).\n     *\n     * @usage\n     * Please refer to the plugin's repo for detailed usage. This docs page only explains the Native wrapper.\n     *\n     * ```typescript\n     * import { LaunchNavigator, LaunchNavigatorOptions } from '@ionic-native/launch-navigator';\n     *\n     * constructor(private launchNavigator: LaunchNavigator) { }\n     *\n     * ...\n     *\n     * let options: LaunchNavigatorOptions = {\n     *   start: 'London, ON',\n     *   app: LaunchNavigator.APPS.UBER\n     * };\n     *\n     * this.launchNavigator.navigate('Toronto, ON', options)\n     *   .then(\n     *     success => console.log('Launched navigator'),\n     *     error => console.log('Error launching navigator', error)\n     *   );\n     * ```\n     * @interfaces\n     * LaunchNavigatorOptions\n     * PromptsOptions\n     * RememberChoiceOptions\n     * AppSelectionOptions\n     * UserChoice\n     * UserPrompted\n     * AppSelection\n     */\n    LaunchNavigator = __decorate([\n        Plugin({\n            pluginName: 'LaunchNavigator',\n            plugin: 'uk.co.workingedge.phonegap.plugin.launchnavigator',\n            pluginRef: 'launchnavigator',\n            repo: 'https://github.com/dpa99c/phonegap-launch-navigator',\n            platforms: ['Android', 'iOS', 'Windows', 'Windows Phone 8']\n        })\n    ], LaunchNavigator);\n    return LaunchNavigator;\n}(IonicNativePlugin));\nexport { LaunchNavigator };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/launch-navigator/index.js\n// module id = 307\n// module chunks = 0","import { Component, ViewChild, ElementRef, NgZone } from \"@angular/core\";\r\nimport { IonicPage, ToastController, LoadingController } from \"ionic-angular\";\r\nimport { NavController } from \"ionic-angular\";\r\nimport { Geolocation } from \"@ionic-native/geolocation\";\r\nimport {\r\n  LaunchNavigator,\r\n  LaunchNavigatorOptions\r\n} from \"@ionic-native/launch-navigator\";\r\ndeclare var google;\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: \"page-home\",\r\n  templateUrl: \"home.html\"\r\n})\r\nexport class HomePage {\r\n  @ViewChild(\"map\") mapElement: ElementRef;\r\n  map: any;\r\n  originAutocomplete: any;\r\n  destAutocomplete: any;\r\n  directionsService: any;\r\n  directionsDisplay: any;\r\n  geoCoder: any;\r\n  originInput = \"\";\r\n  destinationInput = \"\";\r\n  markerArray = [];\r\n  rendrerArray = [];\r\n  routesArray = [];\r\n  response: any;\r\n  constructor(\r\n    public navCtrl: NavController,\r\n    private launchNavigator: LaunchNavigator,\r\n    private ngZone: NgZone,\r\n    private geolocation: Geolocation,\r\n    public toast: ToastController,\r\n    public loading: LoadingController\r\n  ) {}\r\n  createLoader(message) {\r\n    return this.loading.create({\r\n      content: message,\r\n      duration: 3000\r\n    });\r\n  }\r\n  initializeEvents() {\r\n    try {\r\n      this.directionsService = new google.maps.DirectionsService();\r\n      this.directionsDisplay = new google.maps.DirectionsRenderer();\r\n      this.geoCoder = new google.maps.Geocoder();\r\n      this.destAutocomplete = new google.maps.places.Autocomplete(\r\n        document.getElementById(\"end\").getElementsByTagName(\"input\")[0],\r\n        { placeIdOnly: true }\r\n      );\r\n\r\n      google.maps.event.addListener(\r\n        this.destAutocomplete,\r\n        \"place_changed\",\r\n        () => {\r\n          this.ngZone.run(() => {\r\n            this.destinationInput = this.destAutocomplete.getPlace().name;\r\n          });\r\n        }\r\n      );\r\n    } catch (e) {\r\n      alert(\"Check your internet connection\");\r\n    }\r\n  }\r\n  ngAfterViewInit() {\r\n    setTimeout(() => {\r\n      this.initializeEvents();\r\n      this.initMap();\r\n    }, 2000);\r\n  }\r\n  async initMap() {\r\n    const current = await this.getNativeCurrentLocation();\r\n    this.map = new google.maps.Map(this.mapElement.nativeElement, {\r\n      zoom: 12,\r\n      center: { lat: current[\"lat\"], lng: current[\"lng\"] }\r\n    });\r\n    var marker = new google.maps.Marker();\r\n    marker.setMap(this.map);\r\n    marker.setPosition({\r\n      lat: current[\"lat\"],\r\n      lng: current[\"lng\"]\r\n    });\r\n    this.markerArray.push(marker);\r\n    this.directionsDisplay.setMap(this.map);\r\n  }\r\n\r\n  async calculateAndDisplayRoute() {\r\n    const current = await this.getNativeCurrentLocation();\r\n    if (!current) {\r\n      alert(\"Current location not found\");\r\n      return;\r\n    }\r\n    this.directionsDisplay.setDirections({ routes: [] });\r\n    const map = this.map;\r\n    this.clearMarker();\r\n    const loader = this.createLoader(\"Searching\");\r\n    loader.present();\r\n    this.directionsService.route(\r\n      {\r\n        origin: current[\"lat\"] + \",\" + current[\"lng\"],\r\n        destination: this.destinationInput,\r\n        travelMode: \"DRIVING\",\r\n        provideRouteAlternatives: true\r\n      },\r\n      (response, status) => {\r\n        loader.dismiss();\r\n        if (status === \"OK\") {\r\n          let alternate = true;\r\n          this.response = response;\r\n          console.log(\"routes \" + response.routes.length);\r\n          response.routes.forEach((el1, ind1) => {\r\n            let alter_path = response.routes[ind1].overview_path;\r\n            alternate = true;\r\n            alter_path.forEach((el2, ind2) => {\r\n              const distance = this.getDistance(\r\n                current[\"lat\"],\r\n                current[\"lng\"],\r\n                el2.lat(),\r\n                el2.lng()\r\n              );\r\n              // console.log(distance)\r\n              if (parseInt(distance.toFixed(1)) === 5 && alternate) {\r\n                console.log(distance);\r\n                var marker = new google.maps.Marker();\r\n                marker.setMap(map);\r\n                marker.setPosition({\r\n                  lat: el2.lat(),\r\n                  lng: el2.lng()\r\n                });\r\n                var infowindow = new google.maps.InfoWindow({\r\n                  content: el2.lat() + \" , \" + el2.lng()\r\n                });\r\n                marker.addListener(\"click\", function() {\r\n                  infowindow.open(map, marker);\r\n                });\r\n                this.markerArray.push(marker);\r\n                console.log(\"--marker---\" + distance);\r\n                alternate = false;\r\n              }\r\n            });\r\n          });\r\n\r\n          this.routesArray = response.routes.slice();\r\n          response.routes.length = 0;\r\n          this.routesArray.forEach((el1, ind1) => {\r\n            response.routes[0] = el1;\r\n            let render = new google.maps.DirectionsRenderer();\r\n            render.setMap(map);\r\n            render.setDirections(response);\r\n            this.rendrerArray.push(render);\r\n            render = null;\r\n          });\r\n        } else {\r\n          this.toast\r\n            .create({\r\n              message: `Location ${status}`,\r\n              duration: 2000\r\n            })\r\n            .present();\r\n        }\r\n      }\r\n    );\r\n  }\r\n  clearMarker() {\r\n    for (var i = 0; i < this.markerArray.length; i++) {\r\n      this.markerArray[i].setMap(null);\r\n      if (this.rendrerArray[i]) {\r\n        this.rendrerArray[i].setDirections({ routes: [] });\r\n      }\r\n    }\r\n  }\r\n\r\n  showSteps(directionResult, markerArray) {\r\n    var myRoute = directionResult.routes[0].legs[0];\r\n    for (var i = 0; i < myRoute.steps.length; i++) {\r\n      var marker = (markerArray[i] =\r\n        markerArray[i] || new google.maps.Marker());\r\n      marker.setMap(this.map);\r\n      marker.setPosition(myRoute.steps[i].start_location);\r\n    }\r\n  }\r\n\r\n  getNativeCurrentLocation() {\r\n    return new Promise((resolve, reject) => {\r\n      return this.geolocation\r\n        .getCurrentPosition()\r\n        .then(resp =>\r\n          resolve({\r\n            lat: resp.coords.latitude,\r\n            lng: resp.coords.longitude\r\n          })\r\n        )\r\n        .catch(() => reject(false));\r\n    });\r\n  }\r\n  getCurrentLocation() {\r\n    return new Promise((resolve, reject) => {\r\n      navigator.geolocation.getCurrentPosition(\r\n        function(position) {\r\n          return resolve({\r\n            lat: position.coords.latitude,\r\n            lng: position.coords.longitude\r\n          });\r\n        },\r\n        function() {\r\n          reject(false);\r\n        }\r\n      );\r\n    });\r\n  }\r\n  getDistance(lat1, lng1, lat2, lng2) {\r\n    if (lat1 == null || lng1 == null || lat2 == null || lng2 == null) {\r\n      return 0;\r\n    } else {\r\n      var earthRadius = 6371; //3958.75 in miles, change to 6371 for kilometer output\r\n\r\n      var degLat = (lat2 - lat1) * (Math.PI / 100);\r\n      var degLng = (lng2 - lng1) * (Math.PI / 100);\r\n\r\n      var dLat = degLat;\r\n      var dLng = degLng;\r\n\r\n      var sindLat = Math.sin(dLat / 2);\r\n      var sindLng = Math.sin(dLng / 2);\r\n\r\n      var deglat1 = lat1 * (Math.PI / 100);\r\n      var deglat2 = lat2 * (Math.PI / 100);\r\n\r\n      var a =\r\n        Math.pow(sindLat, 2) +\r\n        Math.pow(sindLng, 2) * Math.cos(deglat1) * Math.cos(deglat2);\r\n\r\n      var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n\r\n      var dist = earthRadius * c;\r\n      // console.log('distance from l1 to l2', dist);\r\n      return dist; // output distance, in MILES\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts"],"sourceRoot":""}
=======
{"version":3,"sources":["../../src/pages/home/home.module.ts","../../node_modules/@ionic-native/geolocation/index.js","../../node_modules/@ionic-native/launch-navigator/index.js","../../src/pages/home/home.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAyC;AACR;AACe;AACiB;AACT;AAOxD,IAAa,cAAc;IAA3B;IAA8B,CAAC;IAAD,qBAAC;AAAD,CAAC;AAAlB,cAAc;IAN1B,uEAAQ,CAAC;QACR,YAAY,EAAE,CAAC,uDAAQ,CAAC;QACxB,OAAO,EAAE,CAAC,sEAAe,CAAC,QAAQ,CAAC,uDAAQ,CAAC,CAAC;QAC7C,SAAS,EAAC,CAAC,uFAAe,EAAC,8EAAW,CAAC;QACvC,eAAe,EAAE,CAAC,uDAAQ,CAAC;KAC5B,CAAC;GACW,cAAc,CAAI;AAAJ;;;;;;;;;ACX3B;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AAC2C;AAC6B;AAC3B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mBAAmB;AAClC,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA,iBAAiB,mBAAmB;AACpC,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA,iBAAiB,mBAAmB;AACpC,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,eAAe,mBAAmB;AAClC,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,iBAAiB,mBAAmB;AACpC,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,iBAAiB,mBAAmB;AACpC,mBAAmB,wBAAwB;AAC3C;AACA;AACA,mBAAmB,2DAAU;AAC7B;AACA,gCAAgC,kDAAkD;AAClF,SAAS;AACT;AACA;AACA,SAAS,OAAO,iEAAU,EAAE;AAC5B;AACA;AACA,QAAQ,2EAAO;AACf;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,0EAAM;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC,CAAC,6EAAiB;AACI;AACvB,iC;;;;;;;;ACjOA;AAAA;AAAA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AAC2C;AAC6B;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,0CAA0C;AACrD;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gBAAgB;AAC3C,uBAAuB;AACvB,iBAAiB;AACjB;AACA;AACA;AACA,6BAA6B,gBAAgB;AAC7C,yBAAyB;AACzB,mBAAmB;AACnB;AACA;AACA;AACA,6BAA6B,gBAAgB;AAC7C,yBAAyB;AACzB,mBAAmB;AACnB;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA,mBAAmB;AACnB,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB,mBAAmB;AACnB;AACA;AACA;AACA,qBAAqB;AACrB,mBAAmB;AACnB;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA,mBAAmB;AACnB,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB,mBAAmB;AACnB;AACA;AACA;AACA,qBAAqB;AACrB,mBAAmB;AACnB;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA,wBAAwB;AACxB,iBAAiB;AACjB;AACA;AACA;AACA,0BAA0B;AAC1B,mBAAmB;AACnB;AACA;AACA;AACA,0BAA0B;AAC1B,mBAAmB;AACnB;AACA,yBAAyB,QAAQ;AACjC;AACA;AACA,mBAAmB,OAAO;AAC1B,wBAAwB;AACxB,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B,0BAA0B;AAC1B,mBAAmB;AACnB;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B,0BAA0B;AAC1B,mBAAmB;AACnB;AACA,8BAA8B,QAAQ;AACtC;AACA;AACA,mBAAmB;AACnB,wBAAwB;AACxB,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB,0BAA0B;AAC1B,mBAAmB;AACnB;AACA;AACA;AACA,qBAAqB;AACrB,0BAA0B;AAC1B,mBAAmB;AACnB;AACA,8BAA8B,QAAQ;AACtC;AACA,mBAAmB;AACnB,wBAAwB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","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { HomePage} from './home';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { LaunchNavigator } from '@ionic-native/launch-navigator';\r\nimport { Geolocation } from '@ionic-native/geolocation';\r\n@NgModule({\r\n  declarations: [HomePage],\r\n  imports: [IonicPageModule.forChild(HomePage)],\r\n  providers:[LaunchNavigator,Geolocation],\r\n  entryComponents: [HomePage]\r\n})\r\nexport class HomePageModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.module.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\nimport { Observable } from 'rxjs/Observable';\n/**\n * @name Geolocation\n * @description\n * This plugin provides information about the device's location, such as latitude and longitude. Common sources of location information include Global Positioning System (GPS) and location inferred from network signals such as IP address, RFID, WiFi and Bluetooth MAC addresses, and GSM/CDMA cell IDs.\n *\n *  This API is based on the W3C Geolocation API Specification, and only executes on devices that don't already provide an implementation.\n *\n * For iOS you have to add this configuration to your configuration.xml file\n * ```xml\n * <edit-config file=\"*-Info.plist\" mode=\"merge\" target=\"NSLocationWhenInUseUsageDescription\">\n *    <string>We use your location for full functionality of certain app features.</string>\n * </edit-config>\n * ```\n *\n *\n * @usage\n *\n * ```typescript\n * import { Geolocation } from '@ionic-native/geolocation';\n *\n * ...\n *\n * constructor(private geolocation: Geolocation) {}\n *\n * ...\n *\n * this.geolocation.getCurrentPosition().then((resp) => {\n *  // resp.coords.latitude\n *  // resp.coords.longitude\n * }).catch((error) => {\n *   console.log('Error getting location', error);\n * });\n *\n * let watch = this.geolocation.watchPosition();\n * watch.subscribe((data) => {\n *  // data can be a set of coordinates, or an error (if an error occurred).\n *  // data.coords.latitude\n *  // data.coords.longitude\n * });\n * ```\n * @interfaces\n * Coordinates\n * Geoposition\n * PositionError\n * GeolocationOptions\n */\nvar Geolocation = (function (_super) {\n    __extends(Geolocation, _super);\n    function Geolocation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Get the device's current position.\n     *\n     * @param {GeolocationOptions} options  The [geolocation options](https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions).\n     * @returns {Promise<Geoposition>} Returns a Promise that resolves with the [position](https://developer.mozilla.org/en-US/docs/Web/API/Position) of the device, or rejects with an error.\n     */\n    /**\n       * Get the device's current position.\n       *\n       * @param {GeolocationOptions} options  The [geolocation options](https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions).\n       * @returns {Promise<Geoposition>} Returns a Promise that resolves with the [position](https://developer.mozilla.org/en-US/docs/Web/API/Position) of the device, or rejects with an error.\n       */\n    Geolocation.prototype.getCurrentPosition = /**\n       * Get the device's current position.\n       *\n       * @param {GeolocationOptions} options  The [geolocation options](https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions).\n       * @returns {Promise<Geoposition>} Returns a Promise that resolves with the [position](https://developer.mozilla.org/en-US/docs/Web/API/Position) of the device, or rejects with an error.\n       */\n    function (options) {\n        return;\n    };\n    /**\n     * Watch the current device's position.  Clear the watch by unsubscribing from\n     * Observable changes.\n     *\n     * ```typescript\n     * const subscription = this.geolocation.watchPosition()\n     *                               .filter((p) => p.coords !== undefined) //Filter Out Errors\n     *                               .subscribe(position => {\n     *   console.log(position.coords.longitude + ' ' + position.coords.latitude);\n     * });\n     *\n     * // To stop notifications\n     * subscription.unsubscribe();\n     * ```\n     *\n     * @param {GeolocationOptions} options  The [geolocation options](https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions).\n     * @returns {Observable<Geoposition>} Returns an Observable that notifies with the [position](https://developer.mozilla.org/en-US/docs/Web/API/Position) of the device, or errors.\n     */\n    /**\n       * Watch the current device's position.  Clear the watch by unsubscribing from\n       * Observable changes.\n       *\n       * ```typescript\n       * const subscription = this.geolocation.watchPosition()\n       *                               .filter((p) => p.coords !== undefined) //Filter Out Errors\n       *                               .subscribe(position => {\n       *   console.log(position.coords.longitude + ' ' + position.coords.latitude);\n       * });\n       *\n       * // To stop notifications\n       * subscription.unsubscribe();\n       * ```\n       *\n       * @param {GeolocationOptions} options  The [geolocation options](https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions).\n       * @returns {Observable<Geoposition>} Returns an Observable that notifies with the [position](https://developer.mozilla.org/en-US/docs/Web/API/Position) of the device, or errors.\n       */\n    Geolocation.prototype.watchPosition = /**\n       * Watch the current device's position.  Clear the watch by unsubscribing from\n       * Observable changes.\n       *\n       * ```typescript\n       * const subscription = this.geolocation.watchPosition()\n       *                               .filter((p) => p.coords !== undefined) //Filter Out Errors\n       *                               .subscribe(position => {\n       *   console.log(position.coords.longitude + ' ' + position.coords.latitude);\n       * });\n       *\n       * // To stop notifications\n       * subscription.unsubscribe();\n       * ```\n       *\n       * @param {GeolocationOptions} options  The [geolocation options](https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions).\n       * @returns {Observable<Geoposition>} Returns an Observable that notifies with the [position](https://developer.mozilla.org/en-US/docs/Web/API/Position) of the device, or errors.\n       */\n    function (options) {\n        return new Observable(function (observer) {\n            var watchId = navigator.geolocation.watchPosition(observer.next.bind(observer), observer.next.bind(observer), options);\n            return function () { return navigator.geolocation.clearWatch(watchId); };\n        });\n    };\n    Geolocation.decorators = [\n        { type: Injectable },\n    ];\n    __decorate([\n        Cordova({\n            callbackOrder: 'reverse'\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], Geolocation.prototype, \"getCurrentPosition\", null);\n    /**\n     * @name Geolocation\n     * @description\n     * This plugin provides information about the device's location, such as latitude and longitude. Common sources of location information include Global Positioning System (GPS) and location inferred from network signals such as IP address, RFID, WiFi and Bluetooth MAC addresses, and GSM/CDMA cell IDs.\n     *\n     *  This API is based on the W3C Geolocation API Specification, and only executes on devices that don't already provide an implementation.\n     *\n     * For iOS you have to add this configuration to your configuration.xml file\n     * ```xml\n     * <edit-config file=\"*-Info.plist\" mode=\"merge\" target=\"NSLocationWhenInUseUsageDescription\">\n     *    <string>We use your location for full functionality of certain app features.</string>\n     * </edit-config>\n     * ```\n     *\n     *\n     * @usage\n     *\n     * ```typescript\n     * import { Geolocation } from '@ionic-native/geolocation';\n     *\n     * ...\n     *\n     * constructor(private geolocation: Geolocation) {}\n     *\n     * ...\n     *\n     * this.geolocation.getCurrentPosition().then((resp) => {\n     *  // resp.coords.latitude\n     *  // resp.coords.longitude\n     * }).catch((error) => {\n     *   console.log('Error getting location', error);\n     * });\n     *\n     * let watch = this.geolocation.watchPosition();\n     * watch.subscribe((data) => {\n     *  // data can be a set of coordinates, or an error (if an error occurred).\n     *  // data.coords.latitude\n     *  // data.coords.longitude\n     * });\n     * ```\n     * @interfaces\n     * Coordinates\n     * Geoposition\n     * PositionError\n     * GeolocationOptions\n     */\n    Geolocation = __decorate([\n        Plugin({\n            pluginName: 'Geolocation',\n            plugin: 'cordova-plugin-geolocation',\n            pluginRef: 'navigator.geolocation',\n            repo: 'https://github.com/apache/cordova-plugin-geolocation',\n            install: 'ionic cordova plugin add cordova-plugin-geolocation --variable GEOLOCATION_USAGE_DESCRIPTION=\"To locate you\"',\n            installVariables: ['GEOLOCATION_USAGE_DESCRIPTION'],\n            platforms: ['Amazon Fire OS', 'Android', 'Browser', 'iOS', 'Windows']\n        })\n    ], Geolocation);\n    return Geolocation;\n}(IonicNativePlugin));\nexport { Geolocation };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/geolocation/index.js\n// module id = 306\n// module chunks = 0","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\n/**\n * @name Launch Navigator\n * @description\n * Requires Cordova plugin: uk.co.workingedge.phonegap.plugin.launchnavigator. For more info, please see the [LaunchNavigator plugin docs](https://github.com/dpa99c/phonegap-launch-navigator).\n *\n * @usage\n * Please refer to the plugin's repo for detailed usage. This docs page only explains the Native wrapper.\n *\n * ```typescript\n * import { LaunchNavigator, LaunchNavigatorOptions } from '@ionic-native/launch-navigator';\n *\n * constructor(private launchNavigator: LaunchNavigator) { }\n *\n * ...\n *\n * let options: LaunchNavigatorOptions = {\n *   start: 'London, ON',\n *   app: LaunchNavigator.APPS.UBER\n * };\n *\n * this.launchNavigator.navigate('Toronto, ON', options)\n *   .then(\n *     success => console.log('Launched navigator'),\n *     error => console.log('Error launching navigator', error)\n *   );\n * ```\n * @interfaces\n * LaunchNavigatorOptions\n * PromptsOptions\n * RememberChoiceOptions\n * AppSelectionOptions\n * UserChoice\n * UserPrompted\n * AppSelection\n */\nvar LaunchNavigator = (function (_super) {\n    __extends(LaunchNavigator, _super);\n    function LaunchNavigator() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.APP = {\n            USER_SELECT: 'user_select',\n            APPLE_MAPS: 'apple_maps',\n            GOOGLE_MAPS: 'google_maps',\n            WAZE: 'waze',\n            CITYMAPPER: 'citymapper',\n            NAVIGON: 'navigon',\n            TRANSIT_APP: 'transit_app',\n            YANDEX: 'yandex',\n            UBER: 'uber',\n            TOMTOM: 'tomtom',\n            BING_MAPS: 'bing_maps',\n            SYGIC: 'sygic',\n            HERE_MAPS: 'here_maps',\n            MOOVIT: 'moovit'\n        };\n        _this.TRANSPORT_MODE = {\n            DRIVING: 'driving',\n            WALKING: 'walking',\n            BICYCLING: 'bicycling',\n            TRANSIT: 'transit'\n        };\n        return _this;\n    }\n    /**\n     * Launches navigator app\n     * @param destination {string|number[]} Location name or coordinates (as string or array)\n     * @param options {LaunchNavigatorOptions}\n     * @returns {Promise<any>}\n     */\n    /**\n       * Launches navigator app\n       * @param destination {string|number[]} Location name or coordinates (as string or array)\n       * @param options {LaunchNavigatorOptions}\n       * @returns {Promise<any>}\n       */\n    LaunchNavigator.prototype.navigate = /**\n       * Launches navigator app\n       * @param destination {string|number[]} Location name or coordinates (as string or array)\n       * @param options {LaunchNavigatorOptions}\n       * @returns {Promise<any>}\n       */\n    function (destination, options) { return; };\n    /**\n     * Determines if the given app is installed and available on the current device.\n     * @param app {string}\n     * @returns {Promise<any>}\n     */\n    /**\n       * Determines if the given app is installed and available on the current device.\n       * @param app {string}\n       * @returns {Promise<any>}\n       */\n    LaunchNavigator.prototype.isAppAvailable = /**\n       * Determines if the given app is installed and available on the current device.\n       * @param app {string}\n       * @returns {Promise<any>}\n       */\n    function (app) { return; };\n    /**\n     * Returns a list indicating which apps are installed and available on the current device.\n     * @returns {Promise<string[]>}\n     */\n    /**\n       * Returns a list indicating which apps are installed and available on the current device.\n       * @returns {Promise<string[]>}\n       */\n    LaunchNavigator.prototype.availableApps = /**\n       * Returns a list indicating which apps are installed and available on the current device.\n       * @returns {Promise<string[]>}\n       */\n    function () { return; };\n    /**\n     * Returns the display name of the specified app.\n     * @param app {string}\n     * @returns {string}\n     */\n    /**\n       * Returns the display name of the specified app.\n       * @param app {string}\n       * @returns {string}\n       */\n    LaunchNavigator.prototype.getAppDisplayName = /**\n       * Returns the display name of the specified app.\n       * @param app {string}\n       * @returns {string}\n       */\n    function (app) { return; };\n    /**\n     * Returns list of supported apps on a given platform.\n     * @param platform {string}\n     * @returns {string[]}\n     */\n    /**\n       * Returns list of supported apps on a given platform.\n       * @param platform {string}\n       * @returns {string[]}\n       */\n    LaunchNavigator.prototype.getAppsForPlatform = /**\n       * Returns list of supported apps on a given platform.\n       * @param platform {string}\n       * @returns {string[]}\n       */\n    function (platform) { return; };\n    /**\n     * Indicates if an app on a given platform supports specification of transport mode.\n     * @param app {string} specified as a string, you can use one of the constants, e.g `LaunchNavigator.APP.GOOGLE_MAPS`\n     * @param platform {string}\n     * @returns {boolean}\n     */\n    /**\n       * Indicates if an app on a given platform supports specification of transport mode.\n       * @param app {string} specified as a string, you can use one of the constants, e.g `LaunchNavigator.APP.GOOGLE_MAPS`\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    LaunchNavigator.prototype.supportsTransportMode = /**\n       * Indicates if an app on a given platform supports specification of transport mode.\n       * @param app {string} specified as a string, you can use one of the constants, e.g `LaunchNavigator.APP.GOOGLE_MAPS`\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    function (app, platform) { return; };\n    /**\n     * Returns the list of transport modes supported by an app on a given platform.\n     * @param app {string}\n     * @param platform {string}\n     * @returns {string[]}\n     */\n    /**\n       * Returns the list of transport modes supported by an app on a given platform.\n       * @param app {string}\n       * @param platform {string}\n       * @returns {string[]}\n       */\n    LaunchNavigator.prototype.getTransportModes = /**\n       * Returns the list of transport modes supported by an app on a given platform.\n       * @param app {string}\n       * @param platform {string}\n       * @returns {string[]}\n       */\n    function (app, platform) { return; };\n    /**\n     * @param app {string}\n     * @param platform {string}\n     * @returns {boolean}\n     */\n    /**\n       * @param app {string}\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    LaunchNavigator.prototype.supportsDestName = /**\n       * @param app {string}\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    function (app, platform) { return; };\n    /**\n     * Indicates if an app on a given platform supports specification of start location.\n     * @param app {string}\n     * @param platform {string}\n     * @returns {boolean}\n     */\n    /**\n       * Indicates if an app on a given platform supports specification of start location.\n       * @param app {string}\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    LaunchNavigator.prototype.supportsStart = /**\n       * Indicates if an app on a given platform supports specification of start location.\n       * @param app {string}\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    function (app, platform) { return; };\n    /**\n     * @param app {string}\n     * @param platform {string}\n     * @returns {boolean}\n     */\n    /**\n       * @param app {string}\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    LaunchNavigator.prototype.supportsStartName = /**\n       * @param app {string}\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    function (app, platform) { return; };\n    /**\n     * Indicates if an app on a given platform supports specification of launch mode.\n     * Note that currently only Google Maps on Android does.\n     * @param app {string}\n     * @param platform {string}\n     * @returns {boolean}\n     */\n    /**\n       * Indicates if an app on a given platform supports specification of launch mode.\n       * Note that currently only Google Maps on Android does.\n       * @param app {string}\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    LaunchNavigator.prototype.supportsLaunchMode = /**\n       * Indicates if an app on a given platform supports specification of launch mode.\n       * Note that currently only Google Maps on Android does.\n       * @param app {string}\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    function (app, platform) { return; };\n    /**\n     * @param destination {string | number[]}\n     * @param options {LaunchNavigatorOptions}\n     */\n    /**\n       * @param destination {string | number[]}\n       * @param options {LaunchNavigatorOptions}\n       */\n    LaunchNavigator.prototype.userSelect = /**\n       * @param destination {string | number[]}\n       * @param options {LaunchNavigatorOptions}\n       */\n    function (destination, options) { };\n    LaunchNavigator.decorators = [\n        { type: Injectable },\n    ];\n    __decorate([\n        Cordova({\n            successIndex: 2,\n            errorIndex: 3\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object, Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], LaunchNavigator.prototype, \"navigate\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Promise)\n    ], LaunchNavigator.prototype, \"isAppAvailable\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], LaunchNavigator.prototype, \"availableApps\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", String)\n    ], LaunchNavigator.prototype, \"getAppDisplayName\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Array)\n    ], LaunchNavigator.prototype, \"getAppsForPlatform\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Boolean)\n    ], LaunchNavigator.prototype, \"supportsTransportMode\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Array)\n    ], LaunchNavigator.prototype, \"getTransportModes\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Boolean)\n    ], LaunchNavigator.prototype, \"supportsDestName\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Boolean)\n    ], LaunchNavigator.prototype, \"supportsStart\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Boolean)\n    ], LaunchNavigator.prototype, \"supportsStartName\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Boolean)\n    ], LaunchNavigator.prototype, \"supportsLaunchMode\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object, Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], LaunchNavigator.prototype, \"userSelect\", null);\n    /**\n     * @name Launch Navigator\n     * @description\n     * Requires Cordova plugin: uk.co.workingedge.phonegap.plugin.launchnavigator. For more info, please see the [LaunchNavigator plugin docs](https://github.com/dpa99c/phonegap-launch-navigator).\n     *\n     * @usage\n     * Please refer to the plugin's repo for detailed usage. This docs page only explains the Native wrapper.\n     *\n     * ```typescript\n     * import { LaunchNavigator, LaunchNavigatorOptions } from '@ionic-native/launch-navigator';\n     *\n     * constructor(private launchNavigator: LaunchNavigator) { }\n     *\n     * ...\n     *\n     * let options: LaunchNavigatorOptions = {\n     *   start: 'London, ON',\n     *   app: LaunchNavigator.APPS.UBER\n     * };\n     *\n     * this.launchNavigator.navigate('Toronto, ON', options)\n     *   .then(\n     *     success => console.log('Launched navigator'),\n     *     error => console.log('Error launching navigator', error)\n     *   );\n     * ```\n     * @interfaces\n     * LaunchNavigatorOptions\n     * PromptsOptions\n     * RememberChoiceOptions\n     * AppSelectionOptions\n     * UserChoice\n     * UserPrompted\n     * AppSelection\n     */\n    LaunchNavigator = __decorate([\n        Plugin({\n            pluginName: 'LaunchNavigator',\n            plugin: 'uk.co.workingedge.phonegap.plugin.launchnavigator',\n            pluginRef: 'launchnavigator',\n            repo: 'https://github.com/dpa99c/phonegap-launch-navigator',\n            platforms: ['Android', 'iOS', 'Windows', 'Windows Phone 8']\n        })\n    ], LaunchNavigator);\n    return LaunchNavigator;\n}(IonicNativePlugin));\nexport { LaunchNavigator };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/launch-navigator/index.js\n// module id = 307\n// module chunks = 0","import { Component, ViewChild, ElementRef, NgZone } from \"@angular/core\";\r\nimport { IonicPage, ToastController, LoadingController } from \"ionic-angular\";\r\nimport { NavController } from \"ionic-angular\";\r\nimport { Geolocation } from \"@ionic-native/geolocation\";\r\nimport {\r\n  LaunchNavigator,\r\n  LaunchNavigatorOptions\r\n} from \"@ionic-native/launch-navigator\";\r\ndeclare var google;\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: \"page-home\",\r\n  templateUrl: \"home.html\"\r\n})\r\nexport class HomePage {\r\n  @ViewChild(\"map\") mapElement: ElementRef;\r\n  map: any;\r\n  originAutocomplete: any;\r\n  destAutocomplete: any;\r\n  directionsService: any;\r\n  directionsDisplay: any;\r\n  geoCoder: any;\r\n  originInput = \"\";\r\n  destinationInput = \"\";\r\n  markerArray = [];\r\n  routesArray = [];\r\n  constructor(\r\n    public navCtrl: NavController,\r\n    private launchNavigator: LaunchNavigator,\r\n    private ngZone: NgZone,\r\n    private geolocation: Geolocation,\r\n    public toast: ToastController,\r\n    public loading: LoadingController\r\n  ) {}\r\n  createLoader(message) {\r\n    return this.loading.create({\r\n      content: message,\r\n      duration: 3000\r\n    });\r\n  }\r\n  initializeEvents() {\r\n    try {\r\n      this.directionsService = new google.maps.DirectionsService();\r\n      this.directionsDisplay = new google.maps.DirectionsRenderer();\r\n      this.geoCoder = new google.maps.Geocoder();\r\n      this.destAutocomplete = new google.maps.places.Autocomplete(\r\n        document.getElementById(\"end\").getElementsByTagName(\"input\")[0],\r\n        { placeIdOnly: true }\r\n      );\r\n\r\n      google.maps.event.addListener(\r\n        this.destAutocomplete,\r\n        \"place_changed\",\r\n        () => {\r\n          this.ngZone.run(() => {\r\n            this.destinationInput = this.destAutocomplete.getPlace().name;\r\n          });\r\n        }\r\n      );\r\n    } catch (e) {\r\n      alert(\"Check your internet connection\");\r\n    }\r\n  }\r\n  ngAfterViewInit() {\r\n    setTimeout(() => {\r\n      this.initializeEvents();\r\n      this.initMap();\r\n    }, 2000);\r\n  }\r\n  initMap() {\r\n    this.map = new google.maps.Map(this.mapElement.nativeElement, {\r\n      zoom: 7,\r\n      center: { lat: 41.85, lng: -87.65 }\r\n    });\r\n    this.directionsDisplay.setMap(this.map);\r\n  }\r\n\r\n  async calculateAndDisplayRoute() {\r\n    const current = await this.getNativeCurrentLocation();\r\n    if (!current) {\r\n      alert(\"Current location not found\");\r\n      return;\r\n    }\r\n    const map = this.map;\r\n    this.clearMarker();\r\n    const loader = this.createLoader(\"Searching\");\r\n    loader.present();\r\n    this.directionsService.route(\r\n      {\r\n        origin: current[\"lat\"] + \",\" + current[\"lng\"],\r\n        destination: this.destinationInput,\r\n        travelMode: \"DRIVING\",\r\n        provideRouteAlternatives: true\r\n      },\r\n      (response, status) => {\r\n        loader.dismiss();\r\n        if (status === \"OK\") {\r\n          let alternate = true;\r\n\r\n          response.routes.forEach((el1, ind1) => {\r\n            let alter_path = response.routes[ind1].overview_path;\r\n            alternate = true;\r\n            alter_path.forEach((el2, ind2) => {\r\n              const distance = this.getDistance(\r\n                current[\"lat\"],\r\n                current[\"lng\"],\r\n                el2.lat(),\r\n                el2.lng()\r\n              );\r\n              if (parseInt(distance.toFixed(1)) === 3 && alternate) {\r\n                var marker = new google.maps.Marker();\r\n                marker.setMap(map);\r\n                marker.setPosition({\r\n                  lat: el2.lat(),\r\n                  lng: el2.lng()\r\n                });\r\n                var infowindow = new google.maps.InfoWindow({\r\n                  content: el2.lat() + \" , \" + el2.lng()\r\n                });\r\n                marker.addListener(\"click\", function() {\r\n                  infowindow.open(map, marker);\r\n                });\r\n                this.markerArray.push(marker);\r\n                console.log(\"--marker---\" + distance);\r\n                alternate = false;\r\n              }\r\n            });\r\n          });\r\n\r\n          this.routesArray = response.routes.slice();\r\n          response.routes.length = 0;\r\n          this.routesArray.forEach((el1, ind1) => {\r\n            response.routes[0] = el1;\r\n            let render = new google.maps.DirectionsRenderer();\r\n            render.setMap(map);\r\n            render.setDirections(response);\r\n            render = null;\r\n          });\r\n        } else {\r\n          this.toast\r\n            .create({\r\n              message: `Location ${status}`,\r\n              duration: 2000\r\n            })\r\n            .present();\r\n        }\r\n      }\r\n    );\r\n  }\r\n  clearMarker() {\r\n    for (var i = 0; i < this.markerArray.length; i++) {\r\n      this.markerArray[i].setMap(null);\r\n    }\r\n  }\r\n\r\n  showSteps(directionResult, markerArray) {\r\n    var myRoute = directionResult.routes[0].legs[0];\r\n    for (var i = 0; i < myRoute.steps.length; i++) {\r\n      var marker = (markerArray[i] =\r\n        markerArray[i] || new google.maps.Marker());\r\n      marker.setMap(this.map);\r\n      marker.setPosition(myRoute.steps[i].start_location);\r\n    }\r\n  }\r\n  getNativeCurrentLocation() {\r\n    return new Promise((resolve, reject) => {\r\n      return this.geolocation\r\n        .getCurrentPosition()\r\n        .then(resp =>\r\n          resolve({\r\n            lat: resp.coords.latitude,\r\n            lng: resp.coords.longitude\r\n          })\r\n        )\r\n        .catch(() => reject(false));\r\n    });\r\n  }\r\n  getCurrentLocation() {\r\n    return new Promise((resolve, reject) => {\r\n      navigator.geolocation.getCurrentPosition(\r\n        function(position) {\r\n          return resolve({\r\n            lat: position.coords.latitude,\r\n            lng: position.coords.longitude\r\n          });\r\n        },\r\n        function() {\r\n          reject(false);\r\n        }\r\n      );\r\n    });\r\n  }\r\n  getDistance(lat1, lng1, lat2, lng2) {\r\n    if (lat1 == null || lng1 == null || lat2 == null || lng2 == null) {\r\n      return 0;\r\n    } else {\r\n      var earthRadius = 6371; //3958.75 in miles, change to 6371 for kilometer output\r\n\r\n      var degLat = (lat2 - lat1) * (Math.PI / 100);\r\n      var degLng = (lng2 - lng1) * (Math.PI / 100);\r\n\r\n      var dLat = degLat;\r\n      var dLng = degLng;\r\n\r\n      var sindLat = Math.sin(dLat / 2);\r\n      var sindLng = Math.sin(dLng / 2);\r\n\r\n      var deglat1 = lat1 * (Math.PI / 100);\r\n      var deglat2 = lat2 * (Math.PI / 100);\r\n\r\n      var a =\r\n        Math.pow(sindLat, 2) +\r\n        Math.pow(sindLng, 2) * Math.cos(deglat1) * Math.cos(deglat2);\r\n\r\n      var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n\r\n      var dist = earthRadius * c;\r\n      // console.log('distance from l1 to l2', dist);\r\n      return dist; // output distance, in MILES\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts"],"sourceRoot":""}
>>>>>>> a15945f59c68cf4c3cbba098965b5d420bbb32ec
