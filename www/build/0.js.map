{"version":3,"sources":["../../src/pages/home/home.module.ts","../../node_modules/@ionic-native/launch-navigator/index.js","../../src/pages/home/home.ts"],"names":[],"mappings":"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CA;AACA,qBAAqB;AACrB,0BAA0B;AAC1B,mBAAmB;AACnB;AACA,8BAA8B,QAAQ;AACtC;AACA;AACA;AACA,mBAAmB;AACnB,wBAAwB;AACxB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB,0BAA0B;AAC1B,mBAAmB;AACnB;AACA;AACA;AACA;AACA,qBAAqB;AACrB,0BAA0B;AAC1B,mBAAmB;AACnB;AACA,8BAA8B,QAAQ;AACtC;AACA,2BAA2B;AAC3B,uBAAuB;AACvB;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;AACA,qCAAqC;AACrC;AACA,SAAS,OAAO,iEAAU,EAAE;AAC5B;AACA;AACA,QAAQ,2EAAO;AACf;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO,EAAE,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO,EAAE,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO,EAAE,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO,EAAE,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO,EAAE,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO,EAAE,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO,EAAE,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO,EAAE,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO,EAAE,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,0CAA0C;AACzD;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { HomePage} from './home';\nimport { IonicPageModule } from 'ionic-angular';\nimport { LaunchNavigator } from '@ionic-native/launch-navigator';\n@NgModule({\n  declarations: [HomePage],\n  imports: [IonicPageModule.forChild(HomePage)],\n  providers:[LaunchNavigator],\n  entryComponents: [HomePage]\n})\nexport class HomePageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.module.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\n/**\n * @name Launch Navigator\n * @description\n * Requires Cordova plugin: uk.co.workingedge.phonegap.plugin.launchnavigator. For more info, please see the [LaunchNavigator plugin docs](https://github.com/dpa99c/phonegap-launch-navigator).\n *\n * @usage\n * Please refer to the plugin's repo for detailed usage. This docs page only explains the Native wrapper.\n *\n * ```typescript\n * import { LaunchNavigator, LaunchNavigatorOptions } from '@ionic-native/launch-navigator';\n *\n * constructor(private launchNavigator: LaunchNavigator) { }\n *\n * ...\n *\n * let options: LaunchNavigatorOptions = {\n *   start: 'London, ON',\n *   app: LaunchNavigator.APPS.UBER\n * };\n *\n * this.launchNavigator.navigate('Toronto, ON', options)\n *   .then(\n *     success => console.log('Launched navigator'),\n *     error => console.log('Error launching navigator', error)\n *   );\n * ```\n * @interfaces\n * LaunchNavigatorOptions\n * PromptsOptions\n * RememberChoiceOptions\n * AppSelectionOptions\n * UserChoice\n * UserPrompted\n * AppSelection\n */\nvar LaunchNavigator = (function (_super) {\n    __extends(LaunchNavigator, _super);\n    function LaunchNavigator() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.APP = {\n            USER_SELECT: 'user_select',\n            APPLE_MAPS: 'apple_maps',\n            GOOGLE_MAPS: 'google_maps',\n            WAZE: 'waze',\n            CITYMAPPER: 'citymapper',\n            NAVIGON: 'navigon',\n            TRANSIT_APP: 'transit_app',\n            YANDEX: 'yandex',\n            UBER: 'uber',\n            TOMTOM: 'tomtom',\n            BING_MAPS: 'bing_maps',\n            SYGIC: 'sygic',\n            HERE_MAPS: 'here_maps',\n            MOOVIT: 'moovit'\n        };\n        _this.TRANSPORT_MODE = {\n            DRIVING: 'driving',\n            WALKING: 'walking',\n            BICYCLING: 'bicycling',\n            TRANSIT: 'transit'\n        };\n        return _this;\n    }\n    /**\n     * Launches navigator app\n     * @param destination {string|number[]} Location name or coordinates (as string or array)\n     * @param options {LaunchNavigatorOptions}\n     * @returns {Promise<any>}\n     */\n    /**\n       * Launches navigator app\n       * @param destination {string|number[]} Location name or coordinates (as string or array)\n       * @param options {LaunchNavigatorOptions}\n       * @returns {Promise<any>}\n       */\n    LaunchNavigator.prototype.navigate = /**\n       * Launches navigator app\n       * @param destination {string|number[]} Location name or coordinates (as string or array)\n       * @param options {LaunchNavigatorOptions}\n       * @returns {Promise<any>}\n       */\n    function (destination, options) { return; };\n    /**\n     * Determines if the given app is installed and available on the current device.\n     * @param app {string}\n     * @returns {Promise<any>}\n     */\n    /**\n       * Determines if the given app is installed and available on the current device.\n       * @param app {string}\n       * @returns {Promise<any>}\n       */\n    LaunchNavigator.prototype.isAppAvailable = /**\n       * Determines if the given app is installed and available on the current device.\n       * @param app {string}\n       * @returns {Promise<any>}\n       */\n    function (app) { return; };\n    /**\n     * Returns a list indicating which apps are installed and available on the current device.\n     * @returns {Promise<string[]>}\n     */\n    /**\n       * Returns a list indicating which apps are installed and available on the current device.\n       * @returns {Promise<string[]>}\n       */\n    LaunchNavigator.prototype.availableApps = /**\n       * Returns a list indicating which apps are installed and available on the current device.\n       * @returns {Promise<string[]>}\n       */\n    function () { return; };\n    /**\n     * Returns the display name of the specified app.\n     * @param app {string}\n     * @returns {string}\n     */\n    /**\n       * Returns the display name of the specified app.\n       * @param app {string}\n       * @returns {string}\n       */\n    LaunchNavigator.prototype.getAppDisplayName = /**\n       * Returns the display name of the specified app.\n       * @param app {string}\n       * @returns {string}\n       */\n    function (app) { return; };\n    /**\n     * Returns list of supported apps on a given platform.\n     * @param platform {string}\n     * @returns {string[]}\n     */\n    /**\n       * Returns list of supported apps on a given platform.\n       * @param platform {string}\n       * @returns {string[]}\n       */\n    LaunchNavigator.prototype.getAppsForPlatform = /**\n       * Returns list of supported apps on a given platform.\n       * @param platform {string}\n       * @returns {string[]}\n       */\n    function (platform) { return; };\n    /**\n     * Indicates if an app on a given platform supports specification of transport mode.\n     * @param app {string} specified as a string, you can use one of the constants, e.g `LaunchNavigator.APP.GOOGLE_MAPS`\n     * @param platform {string}\n     * @returns {boolean}\n     */\n    /**\n       * Indicates if an app on a given platform supports specification of transport mode.\n       * @param app {string} specified as a string, you can use one of the constants, e.g `LaunchNavigator.APP.GOOGLE_MAPS`\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    LaunchNavigator.prototype.supportsTransportMode = /**\n       * Indicates if an app on a given platform supports specification of transport mode.\n       * @param app {string} specified as a string, you can use one of the constants, e.g `LaunchNavigator.APP.GOOGLE_MAPS`\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    function (app, platform) { return; };\n    /**\n     * Returns the list of transport modes supported by an app on a given platform.\n     * @param app {string}\n     * @param platform {string}\n     * @returns {string[]}\n     */\n    /**\n       * Returns the list of transport modes supported by an app on a given platform.\n       * @param app {string}\n       * @param platform {string}\n       * @returns {string[]}\n       */\n    LaunchNavigator.prototype.getTransportModes = /**\n       * Returns the list of transport modes supported by an app on a given platform.\n       * @param app {string}\n       * @param platform {string}\n       * @returns {string[]}\n       */\n    function (app, platform) { return; };\n    /**\n     * @param app {string}\n     * @param platform {string}\n     * @returns {boolean}\n     */\n    /**\n       * @param app {string}\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    LaunchNavigator.prototype.supportsDestName = /**\n       * @param app {string}\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    function (app, platform) { return; };\n    /**\n     * Indicates if an app on a given platform supports specification of start location.\n     * @param app {string}\n     * @param platform {string}\n     * @returns {boolean}\n     */\n    /**\n       * Indicates if an app on a given platform supports specification of start location.\n       * @param app {string}\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    LaunchNavigator.prototype.supportsStart = /**\n       * Indicates if an app on a given platform supports specification of start location.\n       * @param app {string}\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    function (app, platform) { return; };\n    /**\n     * @param app {string}\n     * @param platform {string}\n     * @returns {boolean}\n     */\n    /**\n       * @param app {string}\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    LaunchNavigator.prototype.supportsStartName = /**\n       * @param app {string}\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    function (app, platform) { return; };\n    /**\n     * Indicates if an app on a given platform supports specification of launch mode.\n     * Note that currently only Google Maps on Android does.\n     * @param app {string}\n     * @param platform {string}\n     * @returns {boolean}\n     */\n    /**\n       * Indicates if an app on a given platform supports specification of launch mode.\n       * Note that currently only Google Maps on Android does.\n       * @param app {string}\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    LaunchNavigator.prototype.supportsLaunchMode = /**\n       * Indicates if an app on a given platform supports specification of launch mode.\n       * Note that currently only Google Maps on Android does.\n       * @param app {string}\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    function (app, platform) { return; };\n    /**\n     * @param destination {string | number[]}\n     * @param options {LaunchNavigatorOptions}\n     */\n    /**\n       * @param destination {string | number[]}\n       * @param options {LaunchNavigatorOptions}\n       */\n    LaunchNavigator.prototype.userSelect = /**\n       * @param destination {string | number[]}\n       * @param options {LaunchNavigatorOptions}\n       */\n    function (destination, options) { };\n    LaunchNavigator.decorators = [\n        { type: Injectable },\n    ];\n    __decorate([\n        Cordova({\n            successIndex: 2,\n            errorIndex: 3\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object, Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], LaunchNavigator.prototype, \"navigate\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Promise)\n    ], LaunchNavigator.prototype, \"isAppAvailable\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], LaunchNavigator.prototype, \"availableApps\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", String)\n    ], LaunchNavigator.prototype, \"getAppDisplayName\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Array)\n    ], LaunchNavigator.prototype, \"getAppsForPlatform\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Boolean)\n    ], LaunchNavigator.prototype, \"supportsTransportMode\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Array)\n    ], LaunchNavigator.prototype, \"getTransportModes\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Boolean)\n    ], LaunchNavigator.prototype, \"supportsDestName\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Boolean)\n    ], LaunchNavigator.prototype, \"supportsStart\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Boolean)\n    ], LaunchNavigator.prototype, \"supportsStartName\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Boolean)\n    ], LaunchNavigator.prototype, \"supportsLaunchMode\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object, Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], LaunchNavigator.prototype, \"userSelect\", null);\n    /**\n     * @name Launch Navigator\n     * @description\n     * Requires Cordova plugin: uk.co.workingedge.phonegap.plugin.launchnavigator. For more info, please see the [LaunchNavigator plugin docs](https://github.com/dpa99c/phonegap-launch-navigator).\n     *\n     * @usage\n     * Please refer to the plugin's repo for detailed usage. This docs page only explains the Native wrapper.\n     *\n     * ```typescript\n     * import { LaunchNavigator, LaunchNavigatorOptions } from '@ionic-native/launch-navigator';\n     *\n     * constructor(private launchNavigator: LaunchNavigator) { }\n     *\n     * ...\n     *\n     * let options: LaunchNavigatorOptions = {\n     *   start: 'London, ON',\n     *   app: LaunchNavigator.APPS.UBER\n     * };\n     *\n     * this.launchNavigator.navigate('Toronto, ON', options)\n     *   .then(\n     *     success => console.log('Launched navigator'),\n     *     error => console.log('Error launching navigator', error)\n     *   );\n     * ```\n     * @interfaces\n     * LaunchNavigatorOptions\n     * PromptsOptions\n     * RememberChoiceOptions\n     * AppSelectionOptions\n     * UserChoice\n     * UserPrompted\n     * AppSelection\n     */\n    LaunchNavigator = __decorate([\n        Plugin({\n            pluginName: 'LaunchNavigator',\n            plugin: 'uk.co.workingedge.phonegap.plugin.launchnavigator',\n            pluginRef: 'launchnavigator',\n            repo: 'https://github.com/dpa99c/phonegap-launch-navigator',\n            platforms: ['Android', 'iOS', 'Windows', 'Windows Phone 8']\n        })\n    ], LaunchNavigator);\n    return LaunchNavigator;\n}(IonicNativePlugin));\nexport { LaunchNavigator };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/launch-navigator/index.js\n// module id = 306\n// module chunks = 0","import { Component, ViewChild, ElementRef, NgZone } from \"@angular/core\";\nimport { IonicPage, ToastController, LoadingController } from \"ionic-angular\";\nimport { NavController } from \"ionic-angular\";\nimport {\n  LaunchNavigator,\n  LaunchNavigatorOptions\n} from \"@ionic-native/launch-navigator\";\ndeclare var google;\n\n@IonicPage()\n@Component({\n  selector: \"page-home\",\n  templateUrl: \"home.html\"\n})\nexport class HomePage {\n  @ViewChild(\"map\") mapElement: ElementRef;\n  map: any;\n  originAutocomplete: any;\n  destAutocomplete: any;\n  directionsService: any;\n  directionsDisplay: any;\n  geoCoder: any;\n  originInput = \"\";\n  destinationInput = \"\";\n  constructor(\n    public navCtrl: NavController,\n    private launchNavigator: LaunchNavigator,\n    private ngZone: NgZone,\n    public toast: ToastController,\n    public loading: LoadingController\n  ) {}\n  createLoader(message) {\n    return this.loading.create({\n      content: message,\n      duration: 3000\n    });\n  }\n  initializeEvents() {\n    this.directionsService = new google.maps.DirectionsService();\n    this.directionsDisplay = new google.maps.DirectionsRenderer();\n    this.geoCoder = new google.maps.Geocoder();\n    this.originAutocomplete = new google.maps.places.Autocomplete(\n      document.getElementById(\"start\").getElementsByTagName(\"input\")[0],\n      { placeIdOnly: true }\n    );\n    this.destAutocomplete = new google.maps.places.Autocomplete(\n      document.getElementById(\"end\").getElementsByTagName(\"input\")[0],\n      { placeIdOnly: true }\n    );\n\n    google.maps.event.addListener(\n      this.originAutocomplete,\n      \"place_changed\",\n      () => {\n        this.ngZone.run(() => {\n          this.originInput = this.originAutocomplete.getPlace().name;\n        });\n      }\n    );\n    google.maps.event.addListener(\n      this.destAutocomplete,\n      \"place_changed\",\n      () => {\n        this.ngZone.run(() => {\n          this.destinationInput = this.destAutocomplete.getPlace().name;\n        });\n      }\n    );\n  }\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.initializeEvents();\n      this.initMap();\n\n    }, 2000);\n  }\n  initMap() {\n    this.map = new google.maps.Map(this.mapElement.nativeElement, {\n      zoom: 7,\n      center: { lat: 41.85, lng: -87.65 }\n    });\n    this.directionsDisplay.setMap(this.map);\n  }\n  navigate() {\n    let options: LaunchNavigatorOptions = {\n      start: this.originInput,\n      launchModeGoogleMaps:'turn-by-turn'\n    };\n    setTimeout(() => {\n      this.destinationInput='Allah Hoo Chowk';\n      this.launchNavigator\n      .navigate(this.destinationInput, options)\n      .then(\n        success => alert(\"Launched navigator\"),\n        error => alert(\"Error launching navigator: \" + error)\n      );\n    }, 20000);\n    this.launchNavigator\n      .navigate(this.destinationInput, options)\n      .then(\n        success => alert(\"Launched navigator\"),\n        error => alert(\"Error launching navigator: \" + error)\n      );\n  }\n  calculateAndDisplayRoute() {\n    const loader = this.createLoader(\"Searching\");\n    loader.present();\n    this.directionsService.route(\n      {\n        origin: this.originInput,\n        destination: this.destinationInput,\n        travelMode: \"DRIVING\"\n      },\n      (response, status) => {\n        loader.dismiss();\n        if (status === \"OK\") {\n          this.directionsDisplay.setDirections(response);\n        } else {\n          this.toast\n            .create({\n              message: `Location ${status}`,\n              duration: 2000\n            })\n            .present();\n        }\n      }\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts"],"sourceRoot":""}